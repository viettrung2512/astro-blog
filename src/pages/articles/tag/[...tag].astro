---
import MainLayout from "../../../layouts/MainLayout.astro";
import ArticleCard from "../../../components/ArticleCard.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from "astro:content";
import { capitalize } from "../../../utils";

export async function getStaticPaths() {
  const allBlogArticles: CollectionEntry<'blog'>[] = await getCollection('blog');

  // Lấy tất cả tag của tất cả bài viết, rồi loại trùng
  const tagsSet = new Set<string>();
  allBlogArticles.forEach(article => {
    article.data.tags.forEach(tag => tagsSet.add(tag));
  });

  // Trả về array các params phù hợp với catch-all route [...tag]
  return Array.from(tagsSet).map(tag => ({
    params: {
      tag: [tag]  // phải là mảng vì route là catch-all [...tag]
    }
  }));
}

const tagParam = Astro.params.tag;
if (!tagParam || !Array.isArray(tagParam)) {
  throw new Error('Tag param is required and must be an array');
}

// Lấy tag đầu tiên (thường bạn chỉ dùng 1 tag thôi)
const tag = tagParam[0];

const allBlogArticles: CollectionEntry<'blog'>[] = (await getCollection('blog'))
  .sort((a:CollectionEntry<'blog'>, b:CollectionEntry<'blog'>) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const tagArticles = allBlogArticles.filter(article => article.data.tags.includes(tag));
---

<MainLayout>
  <a href="/articles" class="inline-block bg-gray-100 p-2 mb-6 hover:bg-indigo-500 hover:text-white">Back To Articles</a>
  <h1 class="text-2xl pb-3">#{capitalize(tag)}</h1>
  <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
    {tagArticles.map(article => (
      <ArticleCard article={article} />
    ))}
  </div>
</MainLayout>
